{"ast":null,"code":"class Stage {\n  constructor() {\n    this.renderParam = {\n      clearColor: 0x666666,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    this.cameraParam = {\n      left: -1,\n      right: 1,\n      top: 1,\n      bottom: 1,\n      near: 0,\n      far: -1\n    };\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n    this.geometry = null;\n    this.material = null;\n    this.mesh = null;\n    this.isInitialized = false;\n  }\n  init() {\n    this._setScene();\n    this._setRender();\n    this._setCamera();\n    this.isInitialized = true;\n  }\n  _setScene() {\n    this.scene = new THREE.Scene();\n  }\n  _setRender() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: document.getElementById(\"webgl-canvas\")\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setClearColor(new THREE.Color(this.renderParam.clearColor));\n    this.renderer.setSize(this.renderParam.width, this.renderParam.height);\n  }\n  _setCamera() {\n    if (!this.isInitialized) {\n      this.camera = new THREE.OrthographicCamera(this.cameraParam.left, this.cameraParam.right, this.cameraParam.top, this.cameraParam.bottom, this.cameraParam.near, this.cameraParam.far);\n    }\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    this.camera.aspect = windowWidth / windowHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(windowWidth, windowHeight);\n  }\n  _render() {\n    this.renderer.render(this.scene, this.camera);\n  }\n  onResize() {\n    this._setCamera();\n  }\n  onRaf() {\n    this._render();\n  }\n}\nclass Mesh {\n  constructor(stage) {\n    this.canvas = document.getElementById(\"webgl-canvas\");\n    this.canvasWidth = this.canvas.width;\n    this.canvasHeight = this.canvas.height;\n    this.uniforms = {\n      resolution: {\n        type: \"v2\",\n        value: [this.canvasWidth, this.canvasHeight]\n      },\n      time: {\n        type: \"f\",\n        value: 0.0\n      },\n      xScale: {\n        type: \"f\",\n        value: 1.0\n      },\n      yScale: {\n        type: \"f\",\n        value: 0.5\n      },\n      distortion: {\n        type: \"f\",\n        value: 0.050\n      }\n    };\n    this.stage = stage;\n    this.mesh = null;\n    this.xScale = 1.0;\n    this.yScale = 0.5;\n    this.distortion = 0.050;\n  }\n  init() {\n    this._setMesh();\n    // this._setGui();\n  }\n  _setMesh() {\n    const position = [-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 0.0];\n    const positions = new THREE.BufferAttribute(new Float32Array(position), 3);\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute(\"position\", positions);\n    const material = new THREE.RawShaderMaterial({\n      vertexShader: document.getElementById(\"js-vertex-shader\").textContent,\n      fragmentShader: document.getElementById(\"js-fragment-shader\").textContent,\n      uniforms: this.uniforms,\n      side: THREE.DoubleSide\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.stage.scene.add(this.mesh);\n  }\n  _diffuse() {\n    // gsap.to(this.mesh.material.uniforms.xScale, {\n    //   value: 2,\n    //   duration: 0.1,\n    //   ease: 'power2.inOut',\n    //   repeat: -1,\n    //   yoyo: true\n    // });\n    // gsap.to(this.mesh.material.uniforms.yScale, {\n    //   value: 1,\n    //   duration: 0.1,\n    //   ease: 'power2.inOut',\n    //   repeat: -1,\n    //   yoyo: true\n    // });\n  }\n  _render() {\n    this.uniforms.time.value += 0.01;\n  }\n  _setGui() {\n    const parameter = {\n      xScale: this.xScale,\n      yScale: this.yScale,\n      distortion: this.distortion\n    };\n    const gui = new dat.GUI();\n    gui.add(parameter, \"xScale\", 0.00, 5.00, 0.01).onChange(value => {\n      this.mesh.material.uniforms.xScale.value = value;\n    });\n    gui.add(parameter, \"yScale\", 0.00, 1.00, 0.01).onChange(value => {\n      this.mesh.material.uniforms.yScale.value = value;\n    });\n    gui.add(parameter, \"distortion\", 0.001, 0.100, 0.001).onChange(value => {\n      this.mesh.material.uniforms.distortion.value = value;\n    });\n  }\n  onRaf() {\n    this._render();\n  }\n}\n(() => {\n  const stage = new Stage();\n  stage.init();\n  const mesh = new Mesh(stage);\n  mesh.init();\n  window.addEventListener(\"resize\", () => {\n    stage.onResize();\n  });\n  window.addEventListener(\"load\", () => {\n    setTimeout(() => {\n      mesh._diffuse();\n    }, 1000);\n  });\n  const _raf = () => {\n    window.requestAnimationFrame(() => {\n      stage.onRaf();\n      mesh.onRaf();\n      _raf();\n    });\n  };\n  _raf();\n})();","map":{"version":3,"names":["Stage","constructor","renderParam","clearColor","width","window","innerWidth","height","innerHeight","cameraParam","left","right","top","bottom","near","far","scene","camera","renderer","geometry","material","mesh","isInitialized","init","_setScene","_setRender","_setCamera","THREE","Scene","WebGLRenderer","canvas","document","getElementById","setPixelRatio","devicePixelRatio","setClearColor","Color","setSize","OrthographicCamera","windowWidth","windowHeight","aspect","updateProjectionMatrix","_render","render","onResize","onRaf","Mesh","stage","canvasWidth","canvasHeight","uniforms","resolution","type","value","time","xScale","yScale","distortion","_setMesh","position","positions","BufferAttribute","Float32Array","BufferGeometry","setAttribute","RawShaderMaterial","vertexShader","textContent","fragmentShader","side","DoubleSide","add","_diffuse","_setGui","parameter","gui","dat","GUI","onChange","addEventListener","setTimeout","_raf","requestAnimationFrame"],"sources":["/Users/wonderer/Desktop/github-portfolio/portfolio/src/true.js"],"sourcesContent":["class Stage {\n    constructor() {\n      this.renderParam = {\n        clearColor: 0x666666,\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n  \n      this.cameraParam = {\n        left: -1,\n        right: 1,\n        top: 1,\n        bottom: 1,\n        near: 0,\n        far: -1\n      };\n  \n      this.scene = null;\n      this.camera = null;\n      this.renderer = null;\n      this.geometry = null;\n      this.material = null;\n      this.mesh = null;\n  \n      this.isInitialized = false;\n    }\n  \n    init() {\n      this._setScene();\n      this._setRender();\n      this._setCamera();\n  \n      this.isInitialized = true;\n    }\n  \n    _setScene() {\n      this.scene = new THREE.Scene();\n    }\n  \n    _setRender() {\n      this.renderer = new THREE.WebGLRenderer({\n        canvas: document.getElementById(\"webgl-canvas\")\n      });\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setClearColor(new THREE.Color(this.renderParam.clearColor));\n      this.renderer.setSize(this.renderParam.width, this.renderParam.height);\n    }\n  \n    _setCamera() {\n      if (!this.isInitialized) {\n        this.camera = new THREE.OrthographicCamera(\n          this.cameraParam.left,\n          this.cameraParam.right,\n          this.cameraParam.top,\n          this.cameraParam.bottom,\n          this.cameraParam.near,\n          this.cameraParam.far\n        );\n      }\n      \n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n  \n      this.camera.aspect = windowWidth / windowHeight;\n  \n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(windowWidth, windowHeight);\n    }\n  \n    _render() {\n      this.renderer.render(this.scene, this.camera);\n    }\n  \n    onResize() {\n      this._setCamera();\n    }\n  \n    onRaf() {\n      this._render();\n    }\n  }\n  \n  class Mesh {\n    constructor(stage) {\n      this.canvas = document.getElementById(\"webgl-canvas\");\n      this.canvasWidth = this.canvas.width;\n      this.canvasHeight = this.canvas.height;\n  \n      this.uniforms = {\n        resolution: { type: \"v2\", value: [ this.canvasWidth, this.canvasHeight ] },\n        time: { type: \"f\", value: 0.0 },\n        xScale: { type: \"f\", value: 1.0 },\n        yScale: { type: \"f\", value: 0.5 },\n        distortion: { type: \"f\", value: 0.050 }\n      };\n  \n      this.stage = stage;\n  \n      this.mesh = null;\n      \n      this.xScale = 1.0;\n      this.yScale = 0.5;\n      this.distortion = 0.050;\n    }\n  \n    init() {\n      this._setMesh();\n      // this._setGui();\n    }\n  \n    _setMesh() {\n      const position = [\n        -1.0, -1.0, 0.0,\n         1.0, -1.0, 0.0,\n        -1.0,  1.0, 0.0,\n         1.0, -1.0, 0.0,\n        -1.0,  1.0, 0.0,\n         1.0,  1.0, 0.0\n      ];\n  \n      const positions = new THREE.BufferAttribute(new Float32Array(position), 3);\n  \n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute(\"position\", positions);\n  \n      const material = new THREE.RawShaderMaterial({\n        vertexShader: document.getElementById(\"js-vertex-shader\").textContent,\n        fragmentShader: document.getElementById(\"js-fragment-shader\").textContent,\n        uniforms: this.uniforms,\n        side: THREE.DoubleSide\n      });\n  \n      this.mesh = new THREE.Mesh(geometry, material);\n  \n      this.stage.scene.add(this.mesh);\n    }\n    \n    _diffuse() {\n      // gsap.to(this.mesh.material.uniforms.xScale, {\n      //   value: 2,\n      //   duration: 0.1,\n      //   ease: 'power2.inOut',\n      //   repeat: -1,\n      //   yoyo: true\n      // });\n      // gsap.to(this.mesh.material.uniforms.yScale, {\n      //   value: 1,\n      //   duration: 0.1,\n      //   ease: 'power2.inOut',\n      //   repeat: -1,\n      //   yoyo: true\n      // });\n    }\n    \n    _render() {\n      this.uniforms.time.value += 0.01;\n    }\n  \n    _setGui() {\n      const parameter = {\n        xScale: this.xScale,\n        yScale: this.yScale,\n        distortion: this.distortion\n      }\n      const gui = new dat.GUI();\n      gui.add(parameter, \"xScale\", 0.00, 5.00, 0.01).onChange((value) => {\n        this.mesh.material.uniforms.xScale.value = value;\n      });\n      gui.add(parameter, \"yScale\", 0.00, 1.00, 0.01).onChange((value) => {\n        this.mesh.material.uniforms.yScale.value = value;\n      });\n      gui.add(parameter, \"distortion\", 0.001, 0.100, 0.001).onChange((value) => {\n        this.mesh.material.uniforms.distortion.value = value;\n      });\n    }\n  \n    onRaf() {\n      this._render();\n    }\n  }\n  \n  (() => {\n    const stage = new Stage();\n  \n    stage.init();\n  \n    const mesh = new Mesh(stage);\n  \n    mesh.init();\n  \n    window.addEventListener(\"resize\", () => {\n      stage.onResize();\n    });\n    \n    window.addEventListener(\"load\", () => {\n      setTimeout(() => {\n        mesh._diffuse();\n      }, 1000);\n    });\n  \n    const _raf = () => {\n      window.requestAnimationFrame(() => {\n        stage.onRaf();\n        mesh.onRaf();\n  \n        _raf();\n      });\n    };\n  \n    _raf();\n  })();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}